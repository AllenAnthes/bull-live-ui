{"version":3,"sources":["../node_modules/jspdf/dist sync","JsonDetailCard.js","DetailPanel.js","utils.js","Table.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","JsonDetailCard","data","title","Card","elevation","CardHeader","CardContent","collapsed","displayDataTypes","enableClipboard","src","shouldCollapse","Array","isArray","length","name","DetailPanel","rowData","Grid","container","spacing","justify","style","padding","stacktrace","item","xs","opts","formatTime","fieldOrDate","date","Date","getDate","time","format","fromNow","formatDistanceToNow","includeSeconds","addSuffix","Typography","variant","useStyles","makeStyles","progressBar","backgroundColor","progressBarError","liveUpdateButton","color","fontSize","maxWidth","minWidth","socket","socketIOClient","process","REACT_APP_SOCKET_IO_URI","transports","Table","queueName","classes","tableRef","useRef","useState","counts","setCounts","tab","setTab","isLiveUpdating","setIsLiveUpdating","rowsPerPage","setRowsPerPage","isFirstRender","baseUrl","window","location","origin","pathname","useEffect","emit","ackResponse","current","onQueryChange","removeAllListeners","on","columns","field","width","render","slice","removable","LinearProgress","thickness","barColorPrimary","failedReason","value","progress","hidden","timestamp","delay","includes","processedOn","formatDistanceStrict","unit","finishedOn","getColumns","actions","isFreeAction","tooltip","icon","className","onClick","prev","iconProps","type","fetch","method","then","event","disabled","toolTip","tableOptions","loadingType","pageSize","pageSizeOptions","actionsColumnIndex","columnsButton","search","sorting","Paper","square","Tabs","onChange","newTab","map","index","Tab","key","label","aria-controls","onChangeRowsPerPage","numRows","options","query","url","URL","Object","entries","filter","val","Boolean","forEach","searchParams","append","toString","res","json","jobs","detailPanel","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","App","useTheme","React","open","setOpen","queues","setQueues","queue","setQueue","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","noWrap","Drawer","anchor","paper","direction","Divider","List","text","ListItem","button","ListItemIcon","ListItemText","primary","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8450c142.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 337;","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst JsonDetailCard = ({ data, title }) => (\n  <Card elevation={0}>\n    <CardHeader title={title} />\n    <CardContent>\n      <ReactJson\n        collapsed={3}\n        displayDataTypes={false}\n        enableClipboard={false}\n        src={data}\n        shouldCollapse={({ src }) => Array.isArray(src) && src.length > 5}\n        name={null}\n      />\n    </CardContent>\n  </Card>\n);\n\nexport default JsonDetailCard;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport JsonDetailCard from './JsonDetailCard';\n\nconst DetailPanel = ({ rowData }) => (\n  <Grid container spacing={2} justify=\"space-evenly\" style={{ padding: '1rem' }}>\n    {rowData.stacktrace && rowData.stacktrace.length > 0 && (\n      <Grid item xs={12}>\n        <JsonDetailCard data={rowData.stacktrace} title=\"Stacktrace:\" />\n      </Grid>\n    )}\n    <Grid item xs={12}>\n      <JsonDetailCard data={rowData.data} title=\"Data:\" />\n    </Grid>\n    <Grid item xs={12}>\n      <JsonDetailCard data={rowData.opts} title=\"Options:\" />\n    </Grid>\n  </Grid>\n);\n\nexport default DetailPanel;\n","import React from 'react';\nimport { format, formatDistanceStrict, formatDistanceToNow } from 'date-fns';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst getDate = ({ fieldOrDate, data }) => {\n  if (fieldOrDate instanceof Date) return fieldOrDate;\n  if (!data[fieldOrDate]) return;\n  return new Date(data[fieldOrDate]);\n};\n\nconst formatTime = (fieldOrDate) => (data) => {\n  const date = getDate({ fieldOrDate, data });\n  if (!date) return;\n\n  const time = format(date, 'HH:mm:ss');\n  const fromNow = formatDistanceToNow(date, { includeSeconds: true, addSuffix: true });\n  return (\n    <>\n      <Typography variant=\"body2\">{time}</Typography>\n      <Typography variant=\"caption\">({fromNow})</Typography>\n    </>\n  );\n};\n\nexport const getColumns = ({ classes, tab }) => {\n  return [\n    {\n      title: 'Id',\n      field: 'id',\n      width: 75,\n      render: (data) => {\n        if (data.id.length > 12) {\n          return `#${data.id.slice(0, 12)}...`;\n        }\n        return `#${data.id}`;\n      },\n    },\n    {\n      title: 'Progress',\n      field: 'progress',\n      removable: true,\n      width: 50,\n      render: (data) => (\n        <LinearProgress\n          thickness={10}\n          color=\"primary\"\n          classes={{\n            barColorPrimary: data.failedReason ? classes.progressBarError : classes.progressBar,\n          }}\n          value={data.progress}\n          variant=\"determinate\"\n        />\n      ),\n    },\n    {\n      title: 'Created',\n      field: 'timestamp',\n      render: formatTime('timestamp'),\n      width: 200,\n    },\n    {\n      title: 'Next Run',\n      hidden: tab !== 'delayed',\n      render: (data) => {\n        const date = new Date(data.timestamp + data.delay);\n        return formatTime(date)(data);\n      },\n    },\n    {\n      title: 'Job Started',\n      field: 'processedOn',\n      render: formatTime('processedOn'),\n      width: 200,\n      hidden: ['waiting', 'delayed'].includes(tab),\n    },\n    {\n      title: 'Waited',\n      field: 'processedOn',\n      width: 200,\n      render: (data) => {\n        if (!data.processedOn) return;\n        return formatDistanceStrict(new Date(data.processedOn), new Date(data.timestamp), {\n          unit: 'second',\n        });\n      },\n      hidden: ['waiting', 'delayed'].includes(tab),\n    },\n    {\n      title: 'Finished',\n      field: 'finishedOn',\n      width: 200,\n      render: formatTime('finishedOn'),\n      hidden: !['latest', 'completed', 'failed'].includes(tab),\n    },\n    {\n      title: 'Run Time',\n      field: 'finishedOn',\n      width: 100,\n      render: (data) => {\n        if (!data.finishedOn) return;\n        return formatDistanceStrict(new Date(data.finishedOn), new Date(data.timestamp), {\n          unit: 'second',\n        });\n      },\n      hidden: !['latest', 'completed', 'failed'].includes(tab),\n    },\n    {\n      title: 'Execution Time',\n      field: 'finishedOn',\n      width: 100,\n      render: (data) => {\n        if (!data.finishedOn) return;\n        return formatDistanceStrict(new Date(data.finishedOn), new Date(data.processedOn), {\n          unit: 'second',\n        });\n      },\n      hidden: !['latest', 'completed', 'failed'].includes(tab),\n    },\n    { title: 'Failed Reason', field: 'failedReason', hidden: tab !== 'failed' },\n  ];\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport MaterialTable from 'material-table';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport StopIcon from '@material-ui/icons/Stop';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport socketIOClient from 'socket.io-client';\n\nimport DetailPanel from './DetailPanel';\nimport { getColumns } from './utils';\n\nconst useStyles = makeStyles(() => ({\n  progressBar: {\n    backgroundColor: 'green',\n  },\n  progressBarError: {\n    backgroundColor: '#f44336',\n  },\n  liveUpdateButton: {\n    color: 'green',\n  },\n  title: {\n    fontSize: 14,\n  },\n  container: {\n    maxWidth: '100%',\n    minWidth: '75%',\n  },\n}));\n\nconst socket = socketIOClient(process.env.REACT_APP_SOCKET_IO_URI, {\n  transports: ['websocket', 'polling'],\n});\n\nconst Table = ({ name: queueName }) => {\n  const classes = useStyles();\n  const tableRef = useRef();\n  const [counts, setCounts] = useState({});\n  const [tab, setTab] = useState('latest');\n  const [isLiveUpdating, setIsLiveUpdating] = useState(true);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const isFirstRender = useRef(true);\n\n  const baseUrl = `${window.location.origin}${window.location.pathname}queues/${queueName}`;\n\n  useEffect(() => {\n    if (isLiveUpdating) {\n      // console.debug(`Subbing to ${queueName}`);\n      socket.emit('subQueue', { queueName }, (ackResponse) => {\n        setCounts(ackResponse.counts);\n      });\n    } else {\n      socket.emit('unsubQueue', { queueName });\n    }\n    return () => void socket.emit('unsubQueue', { queueName });\n  }, [isLiveUpdating, queueName]);\n\n  useEffect(() => {\n    if (!isFirstRender.current) {\n      tableRef.current && tableRef.current.onQueryChange();\n    }\n    isFirstRender.current = false;\n  }, [queueName]);\n\n  useEffect(() => {\n    socket.removeAllListeners();\n    socket.on('progress', (data) => {\n      // console.debug(`progress`, data);\n      tableRef.current && tableRef.current.onQueryChange();\n      setCounts(data.counts);\n    });\n  }, []);\n\n  const columns = getColumns({ classes, tab });\n\n  const getDataForTable = (query) => {\n    const url = new URL(`${baseUrl}/jobs`);\n    Object.entries(query)\n      .filter(([key, val]) => Boolean(val))\n      .forEach(([key, val]) => url.searchParams.append(key, val));\n\n    if (tab !== 'latest') url.searchParams.append('type', tab);\n\n    return fetch(url.toString())\n      .then((res) => res.json())\n      .then((res) => {\n        setCounts(res.counts);\n        return res.jobs;\n      });\n  };\n\n  const actions = [\n    {\n      isFreeAction: true,\n      tooltip: `${isLiveUpdating ? 'Disable' : 'Enable'} Live Updates`,\n      icon: isLiveUpdating\n        ? () => <StopIcon color=\"error\" />\n        : () => <PlayArrowIcon className={classes.liveUpdateButton} />,\n      onClick: () => setIsLiveUpdating((prev) => !prev),\n    },\n    {\n      isFreeAction: true,\n      tooltip: 'Clean jobs',\n      icon: 'delete_forever',\n      iconProps: { color: 'error' },\n      onClick: () => {\n        // for some reason the type for deleting is 'wait' instead of 'waiting' like everywhere else\n        const type = tab === 'waiting' ? 'wait' : tab;\n        fetch(`${baseUrl}/jobs?type=${type}`, { method: 'DELETE' }).then(\n          tableRef.current.onQueryChange\n        );\n      },\n      hidden: tab === 'latest',\n    },\n    {\n      icon: 'delete',\n      tooltip: 'Remove job',\n      iconProps: { color: 'error' },\n      onClick: (event, rowData) =>\n        fetch(`${baseUrl}/jobs/${rowData.id}`, { method: 'DELETE' }).then(\n          tableRef.current.onQueryChange\n        ),\n    },\n    (rowData) => ({\n      icon: 'replay',\n      disabled: !rowData.failedReason,\n      toolTip: 'Retry',\n      onClick: (event, { id }) =>\n        fetch(`${baseUrl}/jobs/${id}/retry`, { method: 'POST' }).then(\n          tableRef.current.onQueryChange\n        ),\n      hidden: !rowData.failedReason,\n    }),\n  ];\n\n  const tableOptions = {\n    loadingType: 'linear',\n    pageSize: rowsPerPage,\n    pageSizeOptions: [5, 10, 20, 50, 100],\n    actionsColumnIndex: -1,\n    columnsButton: true,\n    search: false,\n    sorting: false,\n  };\n\n  return (\n    <Paper square className={classes.container}>\n      <Tabs\n        value={tab}\n        onChange={(event, newTab) => {\n          setTab(newTab);\n          tableRef.current && tableRef.current.onQueryChange();\n        }}\n      >\n        {['latest', 'active', 'waiting', 'completed', 'failed', 'delayed', 'paused'].map(\n          (type, index) => (\n            <Tab\n              key={type}\n              label={\n                <Typography>\n                  {`${type}  `}\n                  {counts[type] ? (\n                    <Typography variant=\"caption\">({counts[type]})</Typography>\n                  ) : null}\n                </Typography>\n              }\n              value={type}\n              aria-controls={`tabpanel-${index}`}\n              id={`tab-${index}`}\n            />\n          )\n        )}\n      </Tabs>\n      <MaterialTable\n        onChangeRowsPerPage={(numRows) => setRowsPerPage(numRows)}\n        tableRef={tableRef}\n        actions={actions}\n        options={tableOptions}\n        data={getDataForTable}\n        title={queueName}\n        columns={columns}\n        detailPanel={(rowData) => <DetailPanel rowData={rowData} />}\n      />\n    </Paper>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListIcon from '@material-ui/icons/List';\nimport clsx from 'clsx';\n\nimport Table from './Table';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [open, setOpen] = React.useState(true);\n  const [queues, setQueues] = useState([]);\n  const [queue, setQueue] = useState();\n\n  useEffect(() => {\n    fetch(`${window.location.origin}${window.location.pathname}queues/`)\n      .then((res) => res.json())\n      .then((data) => {\n        setQueues(data.queues || []);\n        if (data.queues?.length) {\n          setQueue(data.queues[0]);\n        }\n      });\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => setOpen(true)}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Bull UI\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={() => setOpen(false)}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {queues.map((text, index) => (\n            <ListItem button key={text} onClick={() => setQueue(text)}>\n              <ListItemIcon>\n                <ListIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {queue && <Table name={queue} />}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}