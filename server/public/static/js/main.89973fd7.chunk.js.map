{"version":3,"sources":["../node_modules/jspdf/dist sync","JsonDetailCard.js","DetailPanel.js","utils.js","Table.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","JsonDetailCard","data","title","Card","elevation","CardHeader","CardContent","collapsed","displayDataTypes","enableClipboard","src","shouldCollapse","Array","isArray","length","name","DetailPanel","rowData","Grid","container","spacing","justify","style","padding","stacktrace","item","xs","opts","formatTime","fieldOrDate","date","Date","getDate","time","format","fromNow","formatDistanceToNow","includeSeconds","addSuffix","Typography","variant","useStyles","makeStyles","progressBar","backgroundColor","progressBarError","liveUpdateButton","color","fontSize","maxWidth","minWidth","socket","socketIOClient","process","REACT_APP_SOCKET_IO_URI","Table","queueName","classes","tableRef","useRef","useState","counts","setCounts","tab","setTab","isLiveUpdating","setIsLiveUpdating","rowsPerPage","setRowsPerPage","isFirstRender","baseUrl","window","location","origin","pathname","useEffect","console","debug","emit","ackResponse","current","onQueryChange","removeAllListeners","on","columns","field","width","render","slice","removable","LinearProgress","thickness","barColorPrimary","failedReason","value","progress","hidden","timestamp","delay","includes","processedOn","formatDistanceStrict","unit","finishedOn","getColumns","actions","isFreeAction","tooltip","icon","className","onClick","prev","iconProps","type","fetch","method","then","event","disabled","toolTip","tableOptions","loadingType","pageSize","pageSizeOptions","actionsColumnIndex","columnsButton","search","sorting","Paper","square","Tabs","onChange","newTab","map","index","Tab","key","label","aria-controls","onChangeRowsPerPage","numRows","options","query","url","URL","Object","entries","filter","val","Boolean","forEach","searchParams","append","toString","res","json","jobs","detailPanel","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","App","useTheme","React","open","setOpen","queues","setQueues","queue","setQueue","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","noWrap","Drawer","anchor","paper","direction","Divider","List","text","ListItem","button","ListItemIcon","ListItemText","primary","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.89973fd7.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 337;","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst JsonDetailCard = ({ data, title }) => (\n  <Card elevation={0}>\n    <CardHeader title={title} />\n    <CardContent>\n      <ReactJson\n        collapsed={3}\n        displayDataTypes={false}\n        enableClipboard={false}\n        src={data}\n        shouldCollapse={({ src }) => Array.isArray(src) && src.length > 5}\n        name={null}\n      />\n    </CardContent>\n  </Card>\n);\n\nexport default JsonDetailCard;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport JsonDetailCard from './JsonDetailCard';\n\nconst DetailPanel = ({ rowData }) => (\n  <Grid container spacing={2} justify=\"space-evenly\" style={{ padding: '1rem' }}>\n    {rowData.stacktrace && rowData.stacktrace.length > 0 && (\n      <Grid item xs={12}>\n        <JsonDetailCard data={rowData.stacktrace} title=\"Stacktrace:\" />\n      </Grid>\n    )}\n    <Grid item xs={12}>\n      <JsonDetailCard data={rowData.data} title=\"Data:\" />\n    </Grid>\n    <Grid item xs={12}>\n      <JsonDetailCard data={rowData.opts} title=\"Options:\" />\n    </Grid>\n  </Grid>\n);\n\nexport default DetailPanel;\n","import React from 'react';\nimport { format, formatDistanceStrict, formatDistanceToNow } from 'date-fns';\nimport Typography from '@material-ui/core/Typography';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst getDate = ({ fieldOrDate, data }) => {\n  if (fieldOrDate instanceof Date) return fieldOrDate;\n  if (!data[fieldOrDate]) return;\n  return new Date(data[fieldOrDate]);\n};\n\nconst formatTime = (fieldOrDate) => (data) => {\n  const date = getDate({ fieldOrDate, data });\n  if (!date) return;\n\n  const time = format(date, 'HH:mm:ss');\n  const fromNow = formatDistanceToNow(date, { includeSeconds: true, addSuffix: true });\n  return (\n    <>\n      <Typography variant=\"body2\">{time}</Typography>\n      <Typography variant=\"caption\">({fromNow})</Typography>\n    </>\n  );\n};\n\nexport const getColumns = ({ classes, tab }) => {\n  return [\n    {\n      title: 'Id',\n      field: 'id',\n      width: 75,\n      render: (data) => {\n        if (data.id.length > 12) {\n          return `#${data.id.slice(0, 12)}...`;\n        }\n        return `#${data.id}`;\n      },\n    },\n    {\n      title: 'Progress',\n      field: 'progress',\n      removable: true,\n      width: 50,\n      render: (data) => (\n        <LinearProgress\n          thickness={10}\n          color=\"primary\"\n          classes={{\n            barColorPrimary: data.failedReason ? classes.progressBarError : classes.progressBar,\n          }}\n          value={data.progress}\n          variant=\"determinate\"\n        />\n      ),\n    },\n    {\n      title: 'Created',\n      field: 'timestamp',\n      render: formatTime('timestamp'),\n      width: 200,\n    },\n    {\n      title: 'Next Run',\n      hidden: tab !== 'delayed',\n      render: (data) => {\n        const date = new Date(data.timestamp + data.delay);\n        return formatTime(date)(data);\n      },\n    },\n    {\n      title: 'Job Started',\n      field: 'processedOn',\n      render: formatTime('processedOn'),\n      width: 200,\n      hidden: ['waiting', 'delayed'].includes(tab),\n    },\n    {\n      title: 'Waited',\n      field: 'processedOn',\n      width: 200,\n      render: (data) => {\n        if (!data.processedOn) return;\n        return formatDistanceStrict(new Date(data.processedOn), new Date(data.timestamp), {\n          unit: 'second',\n        });\n      },\n      hidden: ['waiting', 'delayed'].includes(tab),\n    },\n    {\n      title: 'Finished',\n      field: 'finishedOn',\n      width: 200,\n      render: formatTime('finishedOn'),\n      hidden: !['latest', 'completed', 'failed'].includes(tab),\n    },\n    {\n      title: 'Run Time',\n      field: 'finishedOn',\n      width: 100,\n      render: (data) => {\n        if (!data.finishedOn) return;\n        return formatDistanceStrict(new Date(data.finishedOn), new Date(data.timestamp), {\n          unit: 'second',\n        });\n      },\n      hidden: !['latest', 'completed', 'failed'].includes(tab),\n    },\n    {\n      title: 'Execution Time',\n      field: 'finishedOn',\n      width: 100,\n      render: (data) => {\n        if (!data.finishedOn) return;\n        return formatDistanceStrict(new Date(data.finishedOn), new Date(data.processedOn), {\n          unit: 'second',\n        });\n      },\n      hidden: !['latest', 'completed', 'failed'].includes(tab),\n    },\n    { title: 'Failed Reason', field: 'failedReason', hidden: tab !== 'failed' },\n  ];\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport MaterialTable from 'material-table';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport StopIcon from '@material-ui/icons/Stop';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport socketIOClient from 'socket.io-client';\n\nimport DetailPanel from './DetailPanel';\nimport { getColumns } from './utils';\n\nconst useStyles = makeStyles(() => ({\n  progressBar: {\n    backgroundColor: 'green',\n  },\n  progressBarError: {\n    backgroundColor: '#f44336',\n  },\n  liveUpdateButton: {\n    color: 'green',\n  },\n  title: {\n    fontSize: 14,\n  },\n  container: {\n    maxWidth: '100%',\n    minWidth: '75%',\n  },\n}));\n\nconst socket = socketIOClient(process.env.REACT_APP_SOCKET_IO_URI);\n\nconst Table = ({ name: queueName }) => {\n  const classes = useStyles();\n  const tableRef = useRef();\n  const [counts, setCounts] = useState({});\n  const [tab, setTab] = useState('latest');\n  const [isLiveUpdating, setIsLiveUpdating] = useState(true);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const isFirstRender = useRef(true);\n\n  const baseUrl = `${window.location.origin}${window.location.pathname}queues/${queueName}`;\n\n  useEffect(() => {\n    if (isLiveUpdating) {\n      console.debug(`Subbing to ${queueName}`);\n      socket.emit('subQueue', { queueName }, (ackResponse) => {\n        setCounts(ackResponse.counts);\n      });\n    } else {\n      socket.emit('unsubQueue', { queueName });\n    }\n    return () => void socket.emit('unsubQueue', { queueName });\n  }, [isLiveUpdating, queueName]);\n\n  useEffect(() => {\n    if (!isFirstRender.current) {\n      tableRef.current && tableRef.current.onQueryChange();\n    }\n    isFirstRender.current = false;\n  }, [queueName]);\n\n  useEffect(() => {\n    socket.removeAllListeners();\n    socket.on('progress', (data) => {\n      console.debug(`progress`, data);\n      tableRef.current && tableRef.current.onQueryChange();\n      setCounts(data.counts);\n    });\n  }, []);\n\n  const columns = getColumns({ classes, tab });\n\n  const getDataForTable = (query) => {\n    const url = new URL(`${baseUrl}/jobs`);\n    Object.entries(query)\n      .filter(([key, val]) => Boolean(val))\n      .forEach(([key, val]) => url.searchParams.append(key, val));\n\n    if (tab !== 'latest') url.searchParams.append('type', tab);\n\n    return fetch(url.toString())\n      .then((res) => res.json())\n      .then((res) => {\n        setCounts(res.counts);\n        return res.jobs;\n      });\n  };\n\n  const actions = [\n    {\n      isFreeAction: true,\n      tooltip: `${isLiveUpdating ? 'Disable' : 'Enable'} Live Updates`,\n      icon: isLiveUpdating\n        ? () => <StopIcon color=\"error\" />\n        : () => <PlayArrowIcon className={classes.liveUpdateButton} />,\n      onClick: () => setIsLiveUpdating((prev) => !prev),\n    },\n    {\n      isFreeAction: true,\n      tooltip: 'Clean jobs',\n      icon: 'delete_forever',\n      iconProps: { color: 'error' },\n      onClick: () => {\n        // for some reason the type for deleting is 'wait' instead of 'waiting' like everywhere else\n        const type = tab === 'waiting' ? 'wait' : tab;\n        fetch(`${baseUrl}/jobs?type=${type}`, { method: 'DELETE' }).then(\n          tableRef.current.onQueryChange\n        );\n      },\n      hidden: tab === 'latest',\n    },\n    {\n      icon: 'delete',\n      tooltip: 'Remove job',\n      iconProps: { color: 'error' },\n      onClick: (event, rowData) =>\n        fetch(`${baseUrl}/jobs/${rowData.id}`, { method: 'DELETE' }).then(\n          tableRef.current.onQueryChange\n        ),\n    },\n    (rowData) => ({\n      icon: 'replay',\n      disabled: !rowData.failedReason,\n      toolTip: 'Retry',\n      onClick: (event, { id }) =>\n        fetch(`${baseUrl}/jobs/${id}/retry`, { method: 'POST' }).then(\n          tableRef.current.onQueryChange\n        ),\n      hidden: !rowData.failedReason,\n    }),\n  ];\n\n  const tableOptions = {\n    loadingType: 'linear',\n    pageSize: rowsPerPage,\n    pageSizeOptions: [5, 10, 20, 50, 100],\n    actionsColumnIndex: -1,\n    columnsButton: true,\n    search: false,\n    sorting: false,\n  };\n\n  return (\n    <Paper square className={classes.container}>\n      <Tabs\n        value={tab}\n        onChange={(event, newTab) => {\n          setTab(newTab);\n          tableRef.current && tableRef.current.onQueryChange();\n        }}\n      >\n        {['latest', 'active', 'waiting', 'completed', 'failed', 'delayed', 'paused'].map(\n          (type, index) => (\n            <Tab\n              key={type}\n              label={\n                <Typography>\n                  {`${type}  `}\n                  {counts[type] ? (\n                    <Typography variant=\"caption\">({counts[type]})</Typography>\n                  ) : null}\n                </Typography>\n              }\n              value={type}\n              aria-controls={`tabpanel-${index}`}\n              id={`tab-${index}`}\n            />\n          )\n        )}\n      </Tabs>\n      <MaterialTable\n        onChangeRowsPerPage={(numRows) => setRowsPerPage(numRows)}\n        tableRef={tableRef}\n        actions={actions}\n        options={tableOptions}\n        data={getDataForTable}\n        title={queueName}\n        columns={columns}\n        detailPanel={(rowData) => <DetailPanel rowData={rowData} />}\n      />\n    </Paper>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from 'react';\nimport Table from './Table';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useTheme } from '@material-ui/core';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListIcon from '@material-ui/icons/List';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [open, setOpen] = React.useState(true);\n  const [queues, setQueues] = useState([]);\n  const [queue, setQueue] = useState();\n\n  useEffect(() => {\n    fetch(`${window.location.origin}${window.location.pathname}queues/`)\n      .then((res) => res.json())\n      .then((data) => {\n        setQueues(data.queues || []);\n        if (data.queues?.length) {\n          setQueue(data.queues[0]);\n        }\n      });\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => setOpen(true)}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Bull UI\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={() => setOpen(false)}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {queues.map((text, index) => (\n            <ListItem button key={text} onClick={() => setQueue(text)}>\n              <ListItemIcon>\n                <ListIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {queue && <Table name={queue} />}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}